var int n;

n = readInt();

var int[n] numbers;
var int[n] helper;
var int i;
var int j;
var int k;

i = 0;

while(i < n) {
  numbers[i] = readInt();
  i = i + 1;
}

def void merge(int[1] numbers, int[1] helper, int low, int middle, int high) {
  var int i;
  var int j;
  var int k;

  i = low;
  while(i <= high) {
    helper[i] = numbers[i];
    i = i + 1;
  }

  i = low;
  j = middle + 1;
  k = low;

  while(i <= middle && j <= high) {
    if(helper[i] <= helper[j]) {
      numbers[k] = helper[i];
      i = i + 1;
    }
    else {
      numbers[k] = helper[j];
      j = j + 1;
    }
    k = k + 1;
  }

  while(i <= middle) {
    numbers[k] = helper[i];
    k = k + 1;
    i = i + 1;
  }
}

def void mergesort(int[1] numbers, int[1] helper, int low, int high) {
  var int middle;

  if(low < high) {
    middle = low + (high - low) / 2;
    mergesort(numbers, helper, low, middle);
    mergesort(numbers, helper, middle + 1, high);
    merge(numbers, helper, low, middle, high);
  }
}

mergesort(numbers, helper, 0, n - 1);

i = 0;
while(i < n) {
  print(numbers[i]);
  newline();
  i = i + 1;
}
